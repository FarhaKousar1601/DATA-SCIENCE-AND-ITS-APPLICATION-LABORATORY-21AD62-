{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# EXPERIMENT -3\nAim: (1) Train a regularized logistic regression classifier on the iris dataset (https://archive.ics.uci.edu/ml/machine-learning-databases/iris/ or the inbuilt iris dataset) using sklearn. Train the model with the following hyperparameter C = 1e4 and report the best classification accuracy.","metadata":{}},{"cell_type":"code","source":"from sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.pipeline import make_pipeline\n# Load the Iris dataset\niris = load_iris()\nX = iris.data\ny = iris.target\n# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n# Create a pipeline with StandardScaler and LogisticRegression with regularization\npipeline = make_pipeline(StandardScaler(), LogisticRegression(C=1e4, max_iter=1000))\n# Train the model\npipeline.fit(X_train, y_train)\n# Calculate the accuracy on the testing set\naccuracy = pipeline.score(X_test, y_test)\nprint(\"Classification accuracy:\", accuracy)","metadata":{"execution":{"iopub.status.busy":"2024-06-11T15:12:07.306469Z","iopub.execute_input":"2024-06-11T15:12:07.306959Z","iopub.status.idle":"2024-06-11T15:12:09.063839Z","shell.execute_reply.started":"2024-06-11T15:12:07.306919Z","shell.execute_reply":"2024-06-11T15:12:09.062449Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Classification accuracy: 1.0\n","output_type":"stream"}]}]}